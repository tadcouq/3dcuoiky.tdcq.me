import{S as T,P as W,W as v,O as z,A as G,D as k,C as E,G as u,c as H,d as F,T as j,e as B,M as h,a as I,b as O,f as V,g as m,h as q,i as R}from"./GLTFLoader-Dnbm3Y3-.js";function Q(L){const o=new T,t=new W(75,window.innerWidth/window.innerHeight,.1,1e3),a=new v;a.setSize(window.innerWidth,window.innerHeight),L.appendChild(a.domElement);const x=new z(t,a.domElement);t.position.set(-10,5,-10),x.update();const A=new G(4210752,1);o.add(A);const l=new k(16777215,1);l.position.set(12.388,3.76,-18),l.castShadow=!0,o.add(l);const b=new E().setPath("./Tex/day_skybox/").load(["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]);o.background=b,new u().load("./3D/03_map.glb",function(e){const n=e.scene;n.position.set(0,0,0),n.scale.set(2,2,2),n.receiveShadow=!0,o.add(n)},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error happened")}),new u().load("./3D/03_vn_flag.glb",function(e){const n=e.scene;n.position.set(.43,2,2.592),n.scale.set(.03,.03,.03),n.castShadow=!0,o.add(n)},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error happened")});const y=new u;let s;y.load("./3D/03_canh_sat.glb",function(e){const n=e.scene;n.position.set(-.22,.75,.6),n.scale.set(.1,.1,.1),n.rotation.y=Math.PI;const w=e.animations;w&&w.length&&(s=new H(n),w.forEach(D=>{s.clipAction(D).play()})),o.add(n)},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error happened")});const S=new F(1,32,32),M=new j().load("./Tex/gray-concrete.jpg"),P=new B({map:M}),i=new h(S,P);i.position.set(.588,.8,-.201),i.scale.set(.1,.1,.1),i.castShadow=!0,o.add(i);const d=new h(new I(30,30),new O({color:32768}));d.rotation.x=-Math.PI/2,d.receiveShadow=!0,d.position.y=0,o.add(d);const p=new V;t.add(p);const r=new m(p),c=new m(p),g=new q;g.load("./Audio/wind.mp3",function(e){r.setBuffer(e),r.setLoop(!0),r.setVolume(2),r.play()}),g.load("./Audio/03_Footsteps.mp3",function(e){c.setBuffer(e),c.setLoop(!0),c.setVolume(.2),c.play()});function f(){requestAnimationFrame(f),s&&s.update(_.getDelta()),C()}const _=new R;function C(){a.render(o,t)}f(),window.addEventListener("resize",()=>{t.aspect=window.innerWidth/window.innerHeight,t.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)})}export{Q as init};
